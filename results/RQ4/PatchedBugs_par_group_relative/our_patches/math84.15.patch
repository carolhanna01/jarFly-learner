--- ./original/org/apache/commons/math/optimization/direct/MultiDirectional.java	2022-12-26 09:22:06.000000000 +0000
+++ ./variant398/org/apache/commons/math/optimization/direct/MultiDirectional.java	2022-12-26 11:59:23.000000000 +0000
@@ -77,9 +77,11 @@
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
-                    simplex = reflectedSimplex;
-                }
+					{
+						simplex = reflectedSimplex;
+					}
+					evaluateSimplex(comparator);
+				}
 
                 return;
 
@@ -87,12 +89,14 @@
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
+            {
+				if (comparator.compare(contracted, best) < 0) {
+					return;
+				}
+				{
+					return;
+				}
+			}
 
         }
 
