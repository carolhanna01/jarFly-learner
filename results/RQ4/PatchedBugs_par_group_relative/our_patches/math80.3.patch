--- ./original/org/apache/commons/math/linear/EigenDecompositionImpl.java	2022-12-22 00:32:02.000000000 +0000
+++ ./variant78/org/apache/commons/math/linear/EigenDecompositionImpl.java	2022-12-22 00:52:46.000000000 +0000
@@ -1134,11 +1134,8 @@
             // flip array
             int j = 4 * n - 1;
             for (int i = 0; i < j; i += 4) {
-                for (int k = 0; k < 4; k += step) {
-                    final double tmp = work[i + k];
-                    work[i + k] = work[j - k];
-                    work[j - k] = tmp;
-                }
+                {
+				}
                 j -= 4;
             }
             return true;
@@ -1434,13 +1431,14 @@
         final double cnst2 = 1.010;
         final double cnst3 = 1.05;
 
-        // a negative dMin forces the shift to take that absolute value
-        // tType records the type of shift.
-        if (dMin <= 0.0) {
-            tau = -dMin;
-            tType = -1;
-            return;
-        }
+        {
+			if (dMin <= 0.0) {
+				tau = -dMin;
+				tType = -1;
+				return;
+			}
+			realEigenvalues = new double[main.length];
+		}
 
         int nn = 4 * end + pingPong - 1;
         switch (deflated) {
