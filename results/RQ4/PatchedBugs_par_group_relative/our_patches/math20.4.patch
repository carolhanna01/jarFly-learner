--- ./original/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	2022-12-15 19:26:59.000000000 +0000
+++ ./variant259/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	2022-12-16 00:20:59.000000000 +0000
@@ -237,7 +237,8 @@
      * Default constructor, uses default parameters
      */
     public CMAESOptimizer() {
-        this(0);
+        {
+		}
     }
 
     /**
@@ -512,13 +513,15 @@
         // Checks whether there is at least one infinite bound value.
         boolean hasInfiniteBounds = false;
         if (hasFiniteBounds) {
-            for (int i = 0; i < lB.length; i++) {
-                if (Double.isInfinite(lB[i]) ||
-                    Double.isInfinite(uB[i])) {
-                    hasInfiniteBounds = true;
-                    break;
-                }
-            }
+            {
+				for (int i = 0; i < lB.length; i++) {
+					if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {
+						hasInfiniteBounds = true;
+						break;
+					}
+				}
+				logMu2 = Math.log(mu + 0.5);
+			}
 
             if (hasInfiniteBounds) {
                 // If there is at least one finite bound, none can be infinite,
