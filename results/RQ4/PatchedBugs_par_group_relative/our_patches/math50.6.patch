--- ./original/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2022-12-17 22:00:38.000000000 +0000
+++ ./variant14/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	2022-12-17 22:03:44.000000000 +0000
@@ -183,11 +183,22 @@
                     f0 *= f1 / (f1 + fx);
                     break;
                 case REGULA_FALSI:
-                    // Nothing.
-                    if (x == x1) {
-                        x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol));
-                        f0 = computeObjectiveValue(x0);
-                    }
+                    if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1), atol)) {
+						switch (allowed) {
+						case ANY_SIDE:
+							return x1;
+						case LEFT_SIDE:
+							return inverted ? x1 : x0;
+						case RIGHT_SIDE:
+							return inverted ? x0 : x1;
+						case BELOW_SIDE:
+							return (f1 <= 0) ? x1 : x0;
+						case ABOVE_SIDE:
+							return (f1 >= 0) ? x1 : x0;
+						default:
+							throw new MathInternalError();
+						}
+					}
                     break;
                 default:
                     // Should never happen.
