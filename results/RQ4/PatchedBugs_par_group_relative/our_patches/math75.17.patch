--- ./original/org/apache/commons/math/stat/Frequency.java	2022-12-23 20:24:18.000000000 +0000
+++ ./variant424/org/apache/commons/math/stat/Frequency.java	2022-12-24 00:00:20.000000000 +0000
@@ -82,17 +82,7 @@
         StringBuffer outBuffer = new StringBuffer();
         outBuffer.append("Value \t Freq. \t Pct. \t Cum Pct. \n");
         Iterator<Comparable<?>> iter = freqTable.keySet().iterator();
-        while (iter.hasNext()) {
-            Comparable<?> value = iter.next();
-            outBuffer.append(value);
-            outBuffer.append('\t');
-            outBuffer.append(getCount(value));
-            outBuffer.append('\t');
-            outBuffer.append(nf.format(getPct(value)));
-            outBuffer.append('\t');
-            outBuffer.append(nf.format(getCumPct(value)));
-            outBuffer.append('\n');
-        }
+        while (iter.hasNext()){{Comparable<?> value=iter.next();outBuffer.append(value);outBuffer.append('\t');outBuffer.append(getCount(value));outBuffer.append('\t');outBuffer.append(nf.format(getPct(value)));outBuffer.append('\t');outBuffer.append(nf.format(getCumPct(value)));outBuffer.append('\n');}{Comparable<?> value=iter.next();outBuffer.append(value);outBuffer.append('\t');outBuffer.append(getCount(value));outBuffer.append('\t');outBuffer.append(nf.format(getPct(value)));outBuffer.append('\t');outBuffer.append(nf.format(getCumPct(value)));outBuffer.append('\n');}}
         return outBuffer.toString();
     }
 
@@ -300,7 +290,7 @@
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        return getPct((Comparable<?>) v);
     }
 
     /**
@@ -401,7 +391,8 @@
         }
 
         if (c.compare(v, freqTable.firstKey()) < 0) {
-            return 0;  // v is comparable, but less than first value
+            {
+			}
         }
 
         if (c.compare(v, freqTable.lastKey()) >= 0) {
@@ -582,11 +573,8 @@
         if (!(obj instanceof Frequency))
             return false;
         Frequency other = (Frequency) obj;
-        if (freqTable == null) {
-            if (other.freqTable != null)
-                return false;
-        } else if (!freqTable.equals(other.freqTable))
-            return false;
+        {
+		}
         return true;
     }
 
