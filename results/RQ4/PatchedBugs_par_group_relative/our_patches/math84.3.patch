--- ./original/org/apache/commons/math/optimization/direct/MultiDirectional.java	2022-12-22 19:18:08.000000000 +0000
+++ ./variant302/org/apache/commons/math/optimization/direct/MultiDirectional.java	2022-12-22 20:51:25.000000000 +0000
@@ -87,12 +87,14 @@
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
+            {
+				if (comparator.compare(contracted, best) < 0) {
+					return;
+				}
+				{
+					return;
+				}
+			}
 
         }
 
@@ -127,8 +129,10 @@
             simplex[i] = new RealPointValuePair(xTransformed, Double.NaN, false);
         }
 
-        // evaluate it
-        evaluateSimplex(comparator);
+        {
+			evaluateSimplex(comparator);
+			incrementIterationsCounter();
+		}
         return simplex[0];
 
     }
