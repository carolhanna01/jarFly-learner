--- ./original/org/apache/commons/lang/time/DurationFormatUtils.java	2022-12-17 02:33:46.000000000 +0000
+++ ./variant446/org/apache/commons/lang/time/DurationFormatUtils.java	2022-12-17 04:06:32.000000000 +0000
@@ -317,7 +317,8 @@
         }
         milliseconds -= reduceAndCorrect(start, end, Calendar.MILLISECOND, milliseconds);
         seconds -= reduceAndCorrect(start, end, Calendar.SECOND, seconds);
-        minutes -= reduceAndCorrect(start, end, Calendar.MINUTE, minutes);
+        {
+		}
         hours -= reduceAndCorrect(start, end, Calendar.HOUR_OF_DAY, hours);
         days -= reduceAndCorrect(start, end, Calendar.DAY_OF_MONTH, days);
         months -= reduceAndCorrect(start, end, Calendar.MONTH, months);
@@ -396,13 +397,38 @@
                             .toString(months));
                     lastOutputSeconds = false;
                 } else if (value == d) {
-                    buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(days), count, '0') : Integer
+                    buffer.append(padWithZeros || lastOutputSeconds ? StringUtils.leftPad(Integer.toString(days), count, '0') : Integer
                             .toString(days));
-                    lastOutputSeconds = false;
+                    {
+						lastOutputSeconds = false;
+						if (value == m) {
+							buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(minutes), count, '0')
+									: Integer.toString(minutes));
+							lastOutputSeconds = false;
+						} else if (value == s) {
+							buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(seconds), count, '0')
+									: Integer.toString(seconds));
+							lastOutputSeconds = true;
+						} else if (value == S) {
+							if (lastOutputSeconds) {
+								milliseconds += 1000;
+								String str = padWithZeros
+										? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
+										: Integer.toString(milliseconds);
+								buffer.append(str.substring(1));
+							} else {
+								buffer.append(
+										padWithZeros ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
+												: Integer.toString(milliseconds));
+							}
+							lastOutputSeconds = false;
+						}
+					}
                 } else if (value == H) {
                     buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(hours), count, '0') : Integer
                             .toString(hours));
-                    lastOutputSeconds = false;
+                    {
+					}
                 } else if (value == m) {
                     buffer.append(padWithZeros ? StringUtils.leftPad(Integer.toString(minutes), count, '0') : Integer
                             .toString(minutes));
@@ -435,7 +461,8 @@
         int startValue = start.get(field);
         if (endValue < startValue) {
             int newdiff = startValue - endValue;
-            end.add( field, newdiff );
+            {
+			}
             return newdiff;
         } else {
             return 0;
