--- ./original/org/jfree/chart/axis/Axis.java	2022-12-15 20:43:26.000000000 +0000
+++ ./variant284/org/jfree/chart/axis/Axis.java	2022-12-16 00:33:00.000000000 +0000
@@ -273,7 +273,10 @@
     protected Axis(String label) {
 
         this.label = label;
-        this.visible = DEFAULT_AXIS_VISIBLE;
+        {
+			this.visible = DEFAULT_AXIS_VISIBLE;
+			this.visible = DEFAULT_AXIS_VISIBLE;
+		}
         this.labelFont = DEFAULT_AXIS_LABEL_FONT;
         this.labelPaint = DEFAULT_AXIS_LABEL_PAINT;
         this.labelInsets = DEFAULT_AXIS_LABEL_INSETS;
@@ -394,9 +397,12 @@
             throw new IllegalArgumentException("Null 'font' argument.");
         }
         if (!this.labelFont.equals(font)) {
-            this.labelFont = font;
-            notifyListeners(new AxisChangeEvent(this));
-        }
+			{
+				this.labelFont = font;
+				notifyListeners(new AxisChangeEvent(this));
+			}
+			notifyListeners(new AxisChangeEvent(this));
+		}
     }
 
     /**
@@ -1127,74 +1133,12 @@
                     labely - h / 2.0f, w, h);
             state.cursorUp(insets.getTop() + labelBounds.getHeight() 
                     + insets.getBottom());
-        }
-        else if (edge == RectangleEdge.BOTTOM) {
-            AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle(), labelBounds.getCenterX(), 
-                    labelBounds.getCenterY());
-            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-            labelBounds = rotatedLabelBounds.getBounds2D();
-            float w = (float) labelBounds.getWidth();
-            float h = (float) labelBounds.getHeight();
-            float labelx = (float) dataArea.getCenterX();
-            float labely = (float) (state.getCursor() + insets.getTop() 
-                    + h / 2.0);
-            TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
-            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, 
-                    labely - h / 2.0f, w, h);
-            state.cursorDown(insets.getTop() + labelBounds.getHeight() 
-                    + insets.getBottom());
-        }
-        else if (edge == RectangleEdge.LEFT) {
-            AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), 
-                    labelBounds.getCenterY());
-            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-            labelBounds = rotatedLabelBounds.getBounds2D();
-            float w = (float) labelBounds.getWidth();
-            float h = (float) labelBounds.getHeight();
-            float labelx = (float) (state.getCursor() - insets.getRight() 
-                    - w / 2.0);
-            float labely = (float) dataArea.getCenterY();
-            TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-                    TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, 
-                    TextAnchor.CENTER);
-            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, 
-                    labely - h / 2.0f, w, h);
-            state.cursorLeft(insets.getLeft() + labelBounds.getWidth() 
-                    + insets.getRight());
-        }
-        else if (edge == RectangleEdge.RIGHT) {
-
-            AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle() + Math.PI / 2.0, 
-                    labelBounds.getCenterX(), labelBounds.getCenterY());
-            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-            labelBounds = rotatedLabelBounds.getBounds2D();
-            float w = (float) labelBounds.getWidth();
-            float h = (float) labelBounds.getHeight();
-            float labelx = (float) (state.getCursor() 
-                            + insets.getLeft() + w / 2.0);
-            float labely = (float) (dataArea.getY() + dataArea.getHeight() 
-                    / 2.0);
-            TextUtilities.drawRotatedString(label, g2, labelx, labely, 
-                    TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0, 
-                    TextAnchor.CENTER);
-            hotspot = new Rectangle2D.Float(labelx - w / 2.0f, 
-                    labely - h / 2.0f, w, h);
-            state.cursorRight(insets.getLeft() + labelBounds.getWidth() 
-                    + insets.getRight());
-
-        }
-        if (plotState != null && hotspot != null) {
-            ChartRenderingInfo owner = plotState.getOwner();
-                EntityCollection entities = owner.getEntityCollection();
-                if (entities != null) {
-                    entities.add(new AxisLabelEntity(this, hotspot, 
-                            this.labelToolTip, this.labelURL));
-                }
-        }
+        } else if (!this.tickLabelFont.equals(font)) {
+			this.tickLabelFont = font;
+			notifyListeners(new AxisChangeEvent(this));
+		}
+        {
+		}
         return state;
 
     }
