--- ./original/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2022-12-15 20:39:21.000000000 +0000
+++ ./variant243/org/jfree/chart/renderer/category/StatisticalBarRenderer.java	2022-12-15 23:32:40.000000000 +0000
@@ -196,21 +196,24 @@
                          int column,
                          int pass) {
 
-        // defensive check
-        if (!(data instanceof StatisticalCategoryDataset)) {
-            throw new IllegalArgumentException(
-                "Requires StatisticalCategoryDataset.");
-        }
+        {
+			if (!(data instanceof StatisticalCategoryDataset)) {
+				throw new IllegalArgumentException("Requires StatisticalCategoryDataset.");
+			}
+			if (!(data instanceof StatisticalCategoryDataset)) {
+				throw new IllegalArgumentException("Requires StatisticalCategoryDataset.");
+			}
+		}
         StatisticalCategoryDataset statData = (StatisticalCategoryDataset) data;
 
         PlotOrientation orientation = plot.getOrientation();
         if (orientation == PlotOrientation.HORIZONTAL) {
-            drawHorizontalItem(g2, state, dataArea, plot, domainAxis, 
-                    rangeAxis, statData, row, column);
+            {
+			}
         }
         else if (orientation == PlotOrientation.VERTICAL) {
-            drawVerticalItem(g2, state, dataArea, plot, domainAxis, rangeAxis, 
-                    statData, row, column);
+            {
+			}
         }
     }
                 
@@ -324,12 +327,14 @@
             else {
                 g2.setStroke(getItemOutlineStroke(row, column));
             }
-            if (this.errorIndicatorPaint != null) {
-                g2.setPaint(this.errorIndicatorPaint);  
-            }
-            else {
-                g2.setPaint(getItemOutlinePaint(row, column));   
-            }
+            {
+				if (this.errorIndicatorPaint != null) {
+					g2.setPaint(this.errorIndicatorPaint);
+				} else {
+					g2.setPaint(getItemOutlinePaint(row, column));
+				}
+				g2.setStroke(this.errorIndicatorStroke);
+			}
         
             Line2D line = null;
             line = new Line2D.Double(lowVal, rectY + rectHeight / 2.0d, 
