--- ./original/org/apache/commons/math/optimization/direct/MultiDirectional.java	2022-12-19 20:48:30.000000000 +0000
+++ ./variant332/org/apache/commons/math/optimization/direct/MultiDirectional.java	2022-12-19 22:06:48.000000000 +0000
@@ -43,9 +43,14 @@
      * <p>The default values are 2.0 for khi and 0.5 for gamma.</p>
      */
     public MultiDirectional() {
-        this.khi   = 2.0;
-        this.gamma = 0.5;
-    }
+		{
+			this.khi = 2.0;
+			this.gamma = 0.5;
+		}
+		{
+			return;
+		}
+	}
 
     /** Build a multi-directional optimizer with specified coefficients.
      * @param khi expansion coefficient
@@ -63,7 +68,10 @@
 
         while (true) {
 
-            incrementIterationsCounter();
+            {
+				incrementIterationsCounter();
+				incrementIterationsCounter();
+			}
 
             // save the original vertex
             final RealPointValuePair[] original = simplex;
@@ -87,12 +95,14 @@
 
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
-            if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
-                return;
-            }
+            {
+				if (comparator.compare(contracted, best) < 0) {
+					return;
+				}
+				{
+					return;
+				}
+			}
 
         }
 
